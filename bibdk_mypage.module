<?php

/**
 * @file
 * Create a profile2 tab that provide a hook for other modules to supply an overview of the user's data.
 */

/**
 * Implements user_profile_tabs (
 * @see ding_user.module)
 */
function bibdk_mypage_user_profile2_tabs() {
  $ret = new stdClass();
  $ret->label = t('My page');
  $ret->form = 'bibdk_mypage_form';
  $ret->type = 'bibdk_mypage';
  return $ret;
}


/**
 * Implements hook_menu().
 * Sets up menu items.
 */
function bibdk_mypage_menu() {
  $items['admin/config/people/bibdk_mypage'] = array(
    'title' => 'Bibliotek.dk : User frontpage settings',
    'description' => 'Settings for the user\'s overview page',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bibdk_mypage_admin'),
    'access arguments' => array('administer users'),
    'file' => 'bibdk_mypage.admin.inc',
  );
  return $items;
}


/**
 * Collect a fieldset from each module that implement hook_bibdk_mypage_tabs.
 *
 * @param type $form
 */
function bibdk_mypage_form($form) {

  $max_rows = variable_get('bibdk_mypage_max_items', 3);
  $form = module_invoke_all('bibdk_mypage_tabs',$max_rows);

  return $form;
}


/**
 * Implements hook_theme().
 */
function bibdk_mypage_theme() {
  $path = drupal_get_path('module', 'bibdk_mypage') . '/theme';
  $bibdk_mypage_theme_array = array(
    'bibdk_mypage-form' => array(
      'render element'  => 'form',
      'path'            => $path,
      'template'        => 'bibdk_mypage-form',
    ),
  );
  return $bibdk_mypage_theme_array;
}


/**
 * Implements hook_menu_alter().
 */
function bibdk_mypage_menu_alter(&$items) {
  $items['user']['page callback'] = '_bibdk_mypage_user_page';
  $items['user']['file'] = 'bibdk_mypage.module';
  $items['user']['module'] = 'bibdk_mypage';
}


/**
 * callback for /user. See bibdk_mypage_menu_alter()
 */
function _bibdk_mypage_user_page() {
  global $user;
  if ($user->uid) {
    menu_set_active_item('user/' . $user->uid . '/edit/bibdk_mypage');
    return menu_execute_active_handler('user/' . $user->uid . '/edit/bibdk_mypage', TRUE);
  }
  else {
    return drupal_get_form('user_login');
  }
}


/**
 * Implements hook_bibdk_mypage_tabs().
 */
function bibdk_mypage_bibdk_mypage_tabs($max_rows) {
  global $user;
  $languages = language_list('enabled');

  $form['bibdk_mypage'] = array(
    '#type'         => 'fieldset',
    '#tree'         => TRUE,
    '#theme'        => 'bibdk_mypage-form',
    '#attributes'   => array('class' => array('element-wrapper', 'bibdk-mypage-wrapper')),
  );

  $form['bibdk_mypage']['header'] = array(
    '#type'           => 'markup',
    '#markup'         => t('Account'),
  );

  $form['bibdk_mypage']['rows'] = array(
    '#type'         => 'fieldset',
    '#tree'         => TRUE,
  );

  $form['bibdk_mypage']['rows'][0]['label_row'] = array(
    '#type'           => 'markup',
    '#markup'         => t('Language'),
  );
  $form['bibdk_mypage']['rows'][0]['value_row'] = array(
    '#type'           => 'markup',
    '#markup'         => ( isset($languages[1][$user->language]->native) ) ? $languages[1][$user->language]->native : t('undefined'),
  );

  $form['bibdk_mypage']['link_profile2_tab'] = array(
    '#type'           => 'link',
    '#title'          => t('Edit settings'),
    '#title_display'  => 'invisible',
    '#href'           => 'user/' . $user->uid . '/edit',
    '#options'        => array('attributes' => array('title' => t('Edit settings'))),
  );

  return $form;
}
