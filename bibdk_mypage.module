<?php

/**
 * @file
 * Create a profile2 tab that provide a hook for other modules to supply an overview of the user's data.
 */

/**
 * Implements user_profile_tabs (
 * @see ding_user.module)
 */
function bibdk_mypage_user_profile2_tabs() {
  $ret = new stdClass();
  $ret->label = t('My page');
  $ret->form = 'bibdk_mypage_form';
  $ret->type = 'bibdk_mypage';
  return $ret;
}

/**
 * Implements hook_menu().
 * Sets up menu items.
 */
function bibdk_mypage_menu() {
  $items['admin/config/people/bibdk_mypage'] = array(
    'title' => 'Bibliotek.dk : User frontpage settings',
    'description' => 'Settings for the user\'s overview page',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bibdk_mypage_admin'),
    'access arguments' => array('administer users'),
    'file' => 'bibdk_mypage.admin.inc',
  );
  return $items;
}

/**
 * Collect a fieldset from each module that implement hook_bibdk_mypage_tabs.
 *
 * @param type $form
 */
function bibdk_mypage_form($form) {

  $max_rows = variable_get('bibdk_mypage_max_items', 3);
  $my_pages = module_invoke_all('bibdk_mypage_tabs', $max_rows);

  foreach ($my_pages as $key => $my_page) {
    $form[$key] = bibdk_my_page_customize_form_elements($my_page);
  }
  return $form;
}

function bibdk_my_page_customize_form_elements($my_page) {
  $form = array(
    '#type' => 'fieldset',
    '#attributes' => array(
      'class' => array(
        'element-wrapper',
        'bibdk-mypage-wrapper'
      )
    ),
  );

  if (isset($my_page['attached'])) {
    $form['#attached'] = $my_page['attached'];
  }

  $form['header'] = array(
    '#type' => 'markup',
    '#markup' => $my_page['header'],
    '#prefix' => '<h2>',
    '#suffix' => '</h2>',
  );

  $form['rows'] = array(
    '#type' => 'container',
  );

  if (isset($my_page['rows']['attributes'])) {
    $form['rows']['#attributes'] = $my_page['rows']['attributes'];
  }

  if (is_Array($my_page['rows']['values'])) {
    foreach ($my_page['rows']['values'] as $values) {
      foreach ($values as $key => $val) {
        $row[$key] = array(
          '#type' => 'markup',
          '#markup' => '<p class="' . drupal_html_class($key) . '">' . $val . '</p>',
        );
      }
      $row['#prefix'] = '<div class="bibdk-mypage-row clearfix">';
      $row['#suffix'] = '</div>';
      $rows[] = $row;
    }
    $form['rows']['values'] = $rows;
  }


  if (isset($my_page['link'])) {
    $form['link'] = array(
      '#type' => 'container',
      '#attributes' => array('class' => array('bibdk-mypage-link')),
    );
    $form['link']['link_profile2_tab'] = array(
      '#type' => 'link',
      '#title' => $my_page['link']['title'],
      '#title_display' => 'invisible',
      '#href' => $my_page['link']['href'],
      '#options' => array(
        'attributes' => array(
          'title' => $my_page['link']['title'],
        ),
      ),
    );
  }
  return $form;
}

/**
 * Implements hook_theme().
 */
function bibdk_mypage_theme() {
  $path = drupal_get_path('module', 'bibdk_mypage') . '/theme';
  $bibdk_mypage_theme_array = array(
    'bibdk_mypage-form' => array(
      'render element' => 'form',
      'path' => $path,
      'template' => 'bibdk_mypage-form',
    ),
  );
  return $bibdk_mypage_theme_array;
}

/**
 * Implements hook_menu_alter().
 */
function bibdk_mypage_menu_alter(&$items) {
  $items['user']['page callback'] = '_bibdk_mypage_user_page';
  $items['user']['file'] = 'bibdk_mypage.module';
  $items['user']['module'] = 'bibdk_mypage';
}

/**
 * callback for /user. See bibdk_mypage_menu_alter()
 */
function _bibdk_mypage_user_page() {
  global $user;
  if ($user->uid) {
    menu_set_active_item('user/' . $user->uid . '/edit/bibdk_mypage');
    return menu_execute_active_handler('user/' . $user->uid . '/edit/bibdk_mypage', TRUE);
  }
  else {
    return drupal_get_form('user_login');
  }
}

/**
 * Implements hook_bibdk_mypage_tabs().
 */
function bibdk_mypage_bibdk_mypage_tabs($max_rows) {
  global $user;

  $ret = array();
  $ret['bibdk_mypage']['header'] = t('Account');
  $ret['bibdk_mypage']['rows']['values'] = bibdk_mypage_my_page_get_rows($max_rows);
  $ret['bibdk_mypage']['link'] = array(
    'title' => t('Edit settings'),
    'href' => 'user/' . $user->uid . '/edit',
  );
  return $ret;
}

function bibdk_mypage_my_page_get_rows($max_rows) {
  global $user;
  $languages = language_list('enabled');
  $ret[] = array(
    'label_row' => t('Language'),
    'value_row' => (isset($languages) && isset($languages[1][$user->language]->native)) ? $languages[1][$user->language]->native : t('undefined'),
  );
  return $ret;
}
